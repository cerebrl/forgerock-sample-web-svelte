import { SvelteComponent, init, safe_not_equal, element, attr, insert, detach, space, text, append, set_data, noop } from 'svelte/internal';

/* src/lib/components/journey/button.svelte generated by Svelte v3.47.0 */

function create_if_block(ctx) {
	let span;

	return {
		c() {
			span = element("span");
			attr(span, "class", "spinner-border spinner-border-sm");
			attr(span, "role", "status");
			attr(span, "aria-hidden", "true");
		},
		m(target, anchor) {
			insert(target, span, anchor);
		},
		d(detaching) {
			if (detaching) detach(span);
		}
	};
}

function create_fragment(ctx) {
	let button;
	let t0;
	let span;
	let t1;
	let if_block = /*submittingForm*/ ctx[1] && create_if_block();

	return {
		c() {
			button = element("button");
			if (if_block) if_block.c();
			t0 = space();
			span = element("span");
			t1 = text(/*buttonText*/ ctx[0]);
			attr(button, "type", "submit");
			attr(button, "class", "btn btn-primary w-100");
			button.disabled = /*submittingForm*/ ctx[1];
		},
		m(target, anchor) {
			insert(target, button, anchor);
			if (if_block) if_block.m(button, null);
			append(button, t0);
			append(button, span);
			append(span, t1);
		},
		p(ctx, [dirty]) {
			if (/*submittingForm*/ ctx[1]) {
				if (if_block) ; else {
					if_block = create_if_block();
					if_block.c();
					if_block.m(button, t0);
				}
			} else if (if_block) {
				if_block.d(1);
				if_block = null;
			}

			if (dirty & /*buttonText*/ 1) set_data(t1, /*buttonText*/ ctx[0]);

			if (dirty & /*submittingForm*/ 2) {
				button.disabled = /*submittingForm*/ ctx[1];
			}
		},
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(button);
			if (if_block) if_block.d();
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let { buttonText = '' } = $$props;
	let { submittingForm = false } = $$props;

	$$self.$$set = $$props => {
		if ('buttonText' in $$props) $$invalidate(0, buttonText = $$props.buttonText);
		if ('submittingForm' in $$props) $$invalidate(1, submittingForm = $$props.submittingForm);
	};

	return [buttonText, submittingForm];
}

class Button extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, { buttonText: 0, submittingForm: 1 });
	}
}

export { Button as default };
