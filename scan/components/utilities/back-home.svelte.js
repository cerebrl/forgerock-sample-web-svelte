import { SvelteComponent, init, safe_not_equal, element, create_component, text, attr, insert, mount_component, append, transition_in, transition_out, detach, destroy_component, component_subscribe } from 'svelte/internal';
import { theme } from '../../global-state.js';
import Left_arrow_icon from '../icons/left-arrow-icon.svelte.js';

/* src/lib/components/utilities/back-home.svelte generated by Svelte v3.47.0 */

function create_fragment(ctx) {
	let a;
	let leftarrowicon;
	let t;
	let a_class_value;
	let current;
	leftarrowicon = new Left_arrow_icon({});

	return {
		c() {
			a = element("a");
			create_component(leftarrowicon.$$.fragment);
			t = text("\n  Home");

			attr(a, "class", a_class_value = `cstm_back-home ${bootstrapClasses} ${/*$theme*/ ctx[0].mode === 'dark'
			? 'cstm_back-home_dark'
			: ''}`);

			attr(a, "href", "/");
		},
		m(target, anchor) {
			insert(target, a, anchor);
			mount_component(leftarrowicon, a, null);
			append(a, t);
			current = true;
		},
		p(ctx, [dirty]) {
			if (!current || dirty & /*$theme*/ 1 && a_class_value !== (a_class_value = `cstm_back-home ${bootstrapClasses} ${/*$theme*/ ctx[0].mode === 'dark'
			? 'cstm_back-home_dark'
			: ''}`)) {
				attr(a, "class", a_class_value);
			}
		},
		i(local) {
			if (current) return;
			transition_in(leftarrowicon.$$.fragment, local);
			current = true;
		},
		o(local) {
			transition_out(leftarrowicon.$$.fragment, local);
			current = false;
		},
		d(detaching) {
			if (detaching) detach(a);
			destroy_component(leftarrowicon);
		}
	};
}

const bootstrapClasses = 'btn btn-sm text-bold text-decoration-none d-inline-block fs-6 my-2';

function instance($$self, $$props, $$invalidate) {
	let $theme;
	component_subscribe($$self, theme, $$value => $$invalidate(0, $theme = $$value));
	return [$theme];
}

class Back_home extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, {});
	}
}

export { Back_home as default };
